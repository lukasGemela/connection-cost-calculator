buildscript {
    ext {
        springBootVersion = '2.5.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.owasp.dependencycheck" version "6.0.3"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: "org.owasp.dependencycheck"

group 'com.gfk.ffa.pr'
version '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.5'
    testCompile "org.testcontainers:testcontainers:1.16.0"
    testCompile group: 'org.awaitility', name: 'awaitility', version: '4.0.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.5'

    compile group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.3.4.RELEASE'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.10.1'
    compile group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.5'
    compile group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'
    compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.30'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtime("io.micrometer:micrometer-registry-prometheus:1.5.3")
}

bootJar {
    mainClassName = "com.gfk.ffa.pr.Application"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    finalizedBy 'jacocoSummary'
}

plugins.withType(JacocoPlugin) {
    tasks["test"].finalizedBy 'jacocoTestReport'
}

dependencyCheck {
    formats = ['json', 'html', 'junit']
}

task jacocoSummary() {
    doLast {
        String totalCoverage = (file('build/reports/jacoco/test/html/index.html').text =~ 'Total.*?([0-9]{1,3})%')[0][1]
        println("Total Coverage: ${totalCoverage}%")
    }
}
